'''
时刻要记得：数组是可变类型。
'''
list_01 = ['a']
list_02 = list_01 * 4
print(list_02)
list_01.append('b')
print(list_02)
'''
上面这个例子中，两次输出结果都是 ['a', 'a', 'a', 'a']
没有什么疑问，有意思的是下面这个操作
'''

list_03 = [[]]
list_04 = list_03 * 4
print(list_04)
list_03[0].append('a')
print(list_04)

'''
这个例子中，第一次输出的是[[], [], [], []]
而第二次输出的则是[['a'], ['a'], ['a'], ['a']]
原因在于：上个例子中，外层list包含的内容是不可变变量，而这个例子中，外层包含的是可变变量list
在进行*4操作的时候，仅仅是把这个id复制了4份，内部的list指向的仍然是list_03[0]，所以，当list_03[0]发生变化的时候
变化会反应到list_04上
所以，进行这种操作的时候，需要使用深拷贝，或者使用下面的方法
'''
list_05 = [[] for __ in range(4)]

'''
这样生成的list就不会有上面那个例子的问题
小技巧：一般我们采用 单下划线来表示值被弃用。但是单下划线是交互模式中表示上一个值的变量，而且有可能与某些常用别名冲突
        所以在这里，我们使用了双下划线表示弃用值。（虽然sonarlint会警告）
'''

